/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar mainContent = document.getElementById('main-content');\nvar footerContent = document.getElementById('footer-content');\nvar asideContent = document.getElementById('aside-content');\nvar weatherInfo = document.getElementById('weather-info');\nvar searchForm = document.getElementById('search-form');\nvar searchInput = document.getElementById('search-input');\nvar burgerMenu = document.getElementById('burger-menu');\nfunction getWeatherData(_x) {\n  return _getWeatherData.apply(this, arguments);\n}\nfunction _getWeatherData() {\n  _getWeatherData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(position) {\n    var latitude, longitude, response, json;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          latitude = position.coords.latitude;\n          longitude = position.coords.longitude;\n          _context.next = 4;\n          return fetch(\"https://api.weatherapi.com/v1/forecast.json?key=0112e4e65c914c9591532907232608&q=\".concat(latitude, \",\").concat(longitude, \"&days=04\"), {\n            mode: 'cors'\n          });\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return response.json();\n        case 7:\n          json = _context.sent;\n          renderWeather(json);\n          renderCurrentTime(latitude, longitude);\n          setInterval(function () {\n            renderCurrentTime(latitude, longitude);\n          }, 30000);\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _getWeatherData.apply(this, arguments);\n}\nnavigator.geolocation.watchPosition(getWeatherData);\nfunction renderWeather(response) {\n  var city = response.location.name;\n  var region = response.location.region;\n  var country = response.location.country;\n  var textCondition = response.current.condition.text;\n  var iconCondition = response.current.condition.icon;\n  var feelslike = Math.floor(response.current.temp_c);\n  var wind = Math.floor(response.current.wind_kph);\n  var dayOne = response.forecast.forecastday[0].day.condition.icon;\n  var dayTwo = response.forecast.forecastday[1].day.condition.icon;\n  var dayThree = response.forecast.forecastday[2].day.condition.icon;\n  var dayOneDate = response.forecast.forecastday[1].date;\n  var dayTwoDate = response.forecast.forecastday[2].date;\n  var dayThreeDate = response.forecast.forecastday[3].date;\n  var minTempDayOne = Math.floor(response.forecast.forecastday[0].day.mintemp_c);\n  var maxTempDayOne = Math.floor(response.forecast.forecastday[0].day.maxtemp_c);\n  var minTempDayTwo = Math.floor(response.forecast.forecastday[1].day.mintemp_c);\n  var maxTempDayTwo = Math.floor(response.forecast.forecastday[1].day.maxtemp_c);\n  var minTempDayThree = Math.floor(response.forecast.forecastday[2].day.mintemp_c);\n  var maxTempDayThree = Math.floor(response.forecast.forecastday[2].day.maxtemp_c);\n  weatherInfo.innerHTML = \"\\n        <div class=\\\"mt-20 mx-auto p-3 h-full flex flex-col gap-8\\\">\\n            <div class=\\\"flex justify-around items-center\\\">\\n                <div id=\\\"current-date\\\" class=\\\"text-lg\\\"></div>\\n\\n                <h1 class=\\\"text-2xl font-medium\\\">\\n                    \".concat(city, \", \").concat(region, \", \").concat(country, \"\\n                </h1>\\n\\n                <div id=\\\"current-time\\\" class=\\\"text-lg\\\"></div>\\n            </div>\\n\\n            <h2 class=\\\"text-center text-2xl font-medium\\\">\\n                Now\\n            </h2>\\n\\n            <div class=\\\"grid justify-items-center gap-y-2\\\">\\n                <img src=\\\"\").concat(iconCondition, \"\\\" class=\\\"w-12\\\">\\n\\n                <h1 class=\\\"text-5xl font-semibold\\\">\\n                    \").concat(feelslike, \"\\xB0C\\n                </h1>\\n\\n                <p class=\\\"text-3xl font-medium my-10\\\">\\n                    \").concat(textCondition, \"\\n                </p>\\n\\n                <p class=\\\"text-2xl grid gap-2 justify-items-center\\\">\\n                    Wind<br>\\n                    <span class=\\\"text-lg flex items-center gap-3\\\">\\n                        <i class=\\\"fi fi-rr-wind grid\\\"></i>\").concat(wind, \" km/h\\n                    </span>\\n                </p>\\n            </div>\\n\\n            <div class=\\\"w-full p-3 flex flex-col gap-3 mt-10\\\">\\n                <div class=\\\"flex justify-around items-center\\\">\\n                    <p>\\n                        \").concat(dayOneDate, \"\\n                    </p>\\n\\n                    <img src=\\\"\").concat(dayOne, \"\\\" class=\\\"w-12\\\">\\n\\n                    <p>\\n                        min \").concat(minTempDayOne, \"\\xB0C\\n                    </p>\\n\\n                    <p>\\n                        max \").concat(maxTempDayOne, \"\\xB0C\\n                    </p>\\n                </div>\\n\\n                <div class=\\\"flex justify-around items-center\\\">\\n                    <p>\\n                        \").concat(dayTwoDate, \"\\n                    </p>\\n\\n                    <img src=\\\"\").concat(dayTwo, \"\\\" class=\\\"w-12\\\">\\n\\n                    <p>\\n                        min \").concat(minTempDayTwo, \"\\xB0C\\n                    </p>\\n\\n                    <p>\\n                        max \").concat(maxTempDayTwo, \"\\xB0C\\n                    </p>\\n                </div>\\n\\n                <div class=\\\"flex items-center justify-around items-center\\\">\\n                    <p>\\n                        \").concat(dayThreeDate, \"\\n                    </p>\\n\\n                    <img src=\\\"\").concat(dayThree, \"\\\" class=\\\"w-12\\\">\\n\\n                    <p>\\n                        min \").concat(minTempDayThree, \"\\xB0C\\n                    </p>\\n\\n                    <p>\\n                        max \").concat(maxTempDayThree, \"\\xB0C\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    \");\n}\nfunction renderCurrentTime(latitude, longitude) {\n  fetch(\"http://api.timezonedb.com/v2.1/get-time-zone?key=FB9X38BQ1RT7&format=json&by=position&lat=\".concat(latitude, \"&lng=\").concat(longitude), {\n    mode: 'cors'\n  }).then(function (response) {\n    return response.json();\n  }).then(getCurrentDate);\n}\nfunction getCurrentDate(response) {\n  var currentDateEl = document.getElementById('current-date');\n  var currentTimeEl = document.getElementById('current-time');\n  var dateTimeString = response.formatted;\n  var dateTime = new Date(dateTimeString);\n  var formattedTime = dateTime.toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  var formattedDate = dateTime.toLocaleDateString({\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n  currentDateEl.innerHTML = \"\\n        <p class=\\\"text-center\\\">\\n            Date\\n        </p>\\n\\n        <p>\\n            \".concat(formattedDate, \"\\n        </p>\\n    \");\n  currentTimeEl.innerHTML = \"\\n        <p class=\\\"text-center\\\">\\n            Time\\n        </p>\\n\\n        <p>\\n            \".concat(formattedTime, \"\\n        </p>\\n    \");\n}\nsearchForm.addEventListener('submit', searchCity);\nfunction searchCity(_x2) {\n  return _searchCity.apply(this, arguments);\n}\nfunction _searchCity() {\n  _searchCity = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event) {\n    var input, response, json;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          event.preventDefault();\n          input = searchInput.value;\n          if (!(input !== '')) {\n            _context2.next = 15;\n            break;\n          }\n          _context2.next = 5;\n          return fetch(\"https://api.weatherapi.com/v1/forecast.json?key=0112e4e65c914c9591532907232608&q=\".concat(input, \"&days=05\"), {\n            mode: 'cors'\n          });\n        case 5:\n          response = _context2.sent;\n          _context2.next = 8;\n          return response.json();\n        case 8:\n          json = _context2.sent;\n          weatherInfo.innerHTML = '';\n          footerContent.classList.remove('absolute', 'bottom-0', 'left-0', 'right-0');\n          renderWeather(json);\n          console.log(json);\n          _context2.next = 17;\n          break;\n        case 15:\n          weatherInfo.innerHTML = \"\\n            <h1 class=\\\"mt-24 text-gray-200 text-3xl text-center\\\">\\n                City Not Found,<br>\\n                Please Provide a Name!\\n            </h1>\\n        \";\n          footerContent.classList.add('absolute', 'bottom-0', 'left-0', 'right-0');\n        case 17:\n          searchForm.reset();\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _searchCity.apply(this, arguments);\n}\nburgerMenu.addEventListener('click', hideOptions);\nfunction hideOptions() {\n  asideContent.classList.toggle('translate-left');\n  mainContent.classList.toggle('margin-left-none');\n  footerContent.classList.toggle('margin-left-none');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;